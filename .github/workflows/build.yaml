env:
  CACHE_KEY_PREFIX: aspnet-lodging
  WORKING_DIRECTORY: aspnet
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}
jobs:
  restore:
    name: restore_aspnet
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      
      - name: dotnet_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.nuget/packages
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/packages.lock.json') }}
      
      - name: dotnet_restore
        run: dotnet restore
        working-directory: ${{ env.WORKING_DIRECTORY }}

  test:
    continue-on-error: true
    name: test_aspnet
    needs: restore
    runs-on: ubuntu-18.04
    steps:
     
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: dotnet_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.nuget/packages
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/packages.lock.json') }}
      
      - name: dotnet_test
        run: |
          dotnet test \
          -p:CollectCoverage=true \
          -p:CoverletOutput=../code_coverage/ \
          -p:CoverletOutputFormat=opencover \
          --logger trx \
          --results-directory ./test_coverage/
        working-directory: ${{ env.WORKING_DIRECTORY }}
        
      - name: opencover_upload
        if: always()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: code_coverage
          path: ${{ env.WORKING_DIRECTORY }}/code_coverage
      
      - name: trx_upload
        if: always()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: test_coverage
          path: ${{ env.WORKING_DIRECTORY }}/test_coverage

  analyze:
    name: analyze_aspnet
    needs: [ test]
    runs-on: ubuntu-18.04
    steps:
      - name: sonar_install
        run: dotnet tool install --global dotnet-sonarscanner
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      
      - name: git_fetch
        run: git fetch --unshallow
      
      - name: opencover_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: code_coverage
          path: ${{ env.WORKING_DIRECTORY }}/code_coverage
      
      - name: trx_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: test_coverage
          path: ${{ env.WORKING_DIRECTORY }}/test_coverage
      
      - name: sonar_scan
        run: |
          dotnet sonarscanner begin -k:2006-jun15-net_rvtr-api-lodging -o:2006-jun15-net -s:$(pwd)/sonar.analysis.xml
          dotnet build ./RVTR.Lodging.sln
          dotnet sonarscanner end
        working-directory: ${{ env.WORKING_DIRECTORY }}
on:
  pull_request:
    branches: 
      - master
  push:
    branches:
      - IntegrationTests
